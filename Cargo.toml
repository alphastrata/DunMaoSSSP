[package]
name = "fast_sssp"
version = "0.1.0"
edition = "2024"
authors = ["jeremy webb <alphastrata@gmail.com>"]
license = "MIT"
description = """
# About:
A naive impl of an SSSP algorithm from the 2025 ["Breaking the Sorting Barrier for Directed Single-Source Shortest Paths"](https://arxiv.org/abs/2504.17033) by Duan, Mao, Mao, Shu, and Yin (2025). 

## Paper claims:

- **Time Complexity**: O(m log^(2/3) n)
- **Space Complexity**: O(n + m)
- **Best for**: Sparse directed graphs where breaking the sorting barrier matters
- **Practical use**: Currently more of theoretical interest; Dijkstra may be faster in practice
"""

[lib]
name = "fast_sssp"

[dependencies]
reqwest = { version = "0.12.23", features = ["blocking"] }
bincode = { version = "2.0.1", features = ["serde"] }
serde = { version = "1.0.219", features = ["derive"] }
flate2 = "1.1.2"
log = "0.4.27"
env_logger = "0.11.8"

[dev-dependencies]
criterion = "0.7.0"
rand = "0.9.2"


[[bench]]
harness = false
name = "bench"
path = "benches/sssp_benchmark.rs"

[[example]]
name = "wiki_talk_benchmark"
path = "examples/wiki_talk_benchmark.rs"

[[bin]]
name = "fetch_data"
path = "bins/fetch_data.rs"

[profile.release]
lto = true
codegen-units = 1
